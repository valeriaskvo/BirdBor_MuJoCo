Metadata-Version: 2.1
Name: nvidia-smi
Version: 0.1.3
Summary: A package for easing return of multiple values
Home-page: https://github.com/cnheider/yeet
Author: Christian Heider Nielsen
Author-email: cnheider@yandex.com
Maintainer: Christian Heider Nielsen
Maintainer-email: cnheider@yandex.com
License: Apache License, Version 2.0
Download-URL: https://github.com/cnheider/yeet/releases
Keywords: python reinforcement-learning interface api
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Natural Language :: English
Requires-Python: >=3
Description-Content-Type: text/markdown
Requires-Dist: numpy (>=1.16.2)
Requires-Dist: six (>=1.12.0)
Requires-Dist: sorcery (>=0.1.0)
Requires-Dist: pytest (>=4.3.1)
Provides-Extra: all

# Warg
```Old-Norse: Varg``` 

![warg](.github/images/warg.svg) ![warg](.github/images/python.svg)

[![Build Status](https://travis-ci.com/aivclab/warg.svg?branch=master)](https://travis-ci.com/aivclab/warg) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black) [![Coverage Status](https://coveralls.io/repos/github/aivclab/warg/badge.svg?branch=master)](https://coveralls.io/github/aivclab/warg?branch=master)
___
> Devour everything.
___

This package is a selection of generalised  small utilities classes for many use-cases, a brief description of each follows.

- A class for easing return of multiple values, implicit handling of args and kwargs and more. 

- A class for executing any 'heavy' function asynchronously storing any results in a bounded queue. 
Note: communication and organisation is costly, intended for heavy processing functions and general queuing.


